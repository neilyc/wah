'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

;(function (window) {
  'use strict';

  var self;
  function App() {
    self = this;
    self._init();
  };
  App.prototype = {
    _init: function _init() {
      self._initNav();

      if (document.querySelector('.list')) {
        var validPopin = new ValidPopin();
      }

      window.onload = function () {
        self._menuCheckActive();
      };
    },
    _initNav: function _initNav() {
      document.querySelector('.toggle-nav').addEventListener('click', function (e) {
        document.querySelector('.sidenav').classList.toggle("open");
        document.querySelector('.container').classList.toggle("open");
        this.classList.toggle("open");
      });
    },
    _menuCheckActive: function _menuCheckActive() {
      var urlMatch = false,
          path = decodeURIComponent(window.location.pathname),
          href;

      Array.prototype.forEach.call(document.querySelectorAll('.sidenav a'), function (elem) {
        href = elem.getAttribute('href');
        if (path.substring(0, href.length) === href && href != '/') {
          elem.classList.add('active');
        }
      });
    }
  };
  window.App = App;
})(window);
'use strict';

var ValidPopin = function () {
  function ValidPopin() {
    _classCallCheck(this, ValidPopin);

    this.popin = document.querySelector('.cd-popup.valid');
    this._init();
  }

  _createClass(ValidPopin, [{
    key: '_init',
    value: function _init() {
      var _this = this;

      Array.prototype.forEach.call(document.querySelectorAll('a.delete'), function (btn) {
        btn.addEventListener('click', function (e) {
          e.preventDefault();
          e.stopPropagation();
          _this.url = e.target.href;
          _this._openPopin();
        });
      });

      this._initButtons();
    }
  }, {
    key: '_initButtons',
    value: function _initButtons() {
      var _this2 = this;

      if (this.popin) {
        this.popin.addEventListener('click', function (e) {
          var close = true;
          e.path.forEach(function (p) {
            if (p.className == 'cd-popup-no' || p.className == 'cd-popup-close') _this2._closePopin();
            if (p.className == 'cd-popup-yes') _this2._goToUrl(_this2.url);
            if (p.className == 'cd-popup-container') close = false;
          });

          if (close) _this2._closePopin();
        });
      }
    }
  }, {
    key: '_openPopin',
    value: function _openPopin() {
      if (this.popin) {
        this.popin.classList.add('is-visible');
      } else {
        this._goToUrl(this.url);
      }
    }
  }, {
    key: '_closePopin',
    value: function _closePopin() {
      this.popin.classList.remove('is-visible');
    }
  }, {
    key: '_goToUrl',
    value: function _goToUrl(url) {
      document.location = url;
    }
  }]);

  return ValidPopin;
}();